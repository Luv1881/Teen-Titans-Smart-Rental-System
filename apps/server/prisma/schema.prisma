generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clients {
  client_id         Int       @id @default(autoincrement())
  client_name       String    @db.VarChar(100)
  reliability_score Int?      @default(100)
  past_delays_count Int?      @default(0)
  rentals           rentals[]
  sites             sites[]
}

model equipment {
  equipment_id       Int                  @id @default(autoincrement())
  equipment_code     String               @unique @db.VarChar(50)
  type               String               @db.VarChar(50)
  status             String?              @default("idle") @db.VarChar(20)
  equipment_tracking equipment_tracking[]
  maintenance        maintenance[]
  rentals            rentals[]
  revenue            revenue[]
}

model equipment_tracking {
  tracking_id  Int        @id @default(autoincrement())
  equipment_id Int?
  timestamp    DateTime?  @default(now()) @db.Timestamp(6)
  latitude     Decimal?   @db.Decimal(9, 6)
  longitude    Decimal?   @db.Decimal(9, 6)
  equipment    equipment? @relation(fields: [equipment_id], references: [equipment_id], onDelete: NoAction, onUpdate: NoAction)
}

model maintenance {
  maintenance_id Int        @id @default(autoincrement())
  equipment_id   Int?
  service_date   DateTime   @db.Date
  service_type   String?    @db.VarChar(50)
  issue_reported String?
  downtime_days  Int?
  equipment      equipment? @relation(fields: [equipment_id], references: [equipment_id], onDelete: NoAction, onUpdate: NoAction)
}

model rentals {
  rental_id            Int        @id @default(autoincrement())
  equipment_id         Int?
  client_id            Int?
  site_id              Int?
  check_out_date       DateTime   @db.Date
  expected_return_date DateTime   @db.Date
  check_in_date        DateTime?  @db.Date
  engine_hours_per_day Decimal?   @db.Decimal(5, 2)
  idle_hours_per_day   Decimal?   @db.Decimal(5, 2)
  operating_days       Int?
  status               String?    @default("active") @db.VarChar(20)
  clients              clients?   @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction)
  equipment            equipment? @relation(fields: [equipment_id], references: [equipment_id], onDelete: NoAction, onUpdate: NoAction)
  sites                sites?     @relation(fields: [site_id], references: [site_id], onDelete: NoAction, onUpdate: NoAction)
  revenue              revenue[]
}

model revenue {
  revenue_id   Int        @id @default(autoincrement())
  equipment_id Int?
  rental_id    Int?
  rental_rate  Decimal?   @db.Decimal(10, 2)
  total_cost   Decimal?   @db.Decimal(12, 2)
  equipment    equipment? @relation(fields: [equipment_id], references: [equipment_id], onDelete: NoAction, onUpdate: NoAction)
  rentals      rentals?   @relation(fields: [rental_id], references: [rental_id], onDelete: NoAction, onUpdate: NoAction)
}

model sites {
  site_id                Int       @id @default(autoincrement())
  site_name              String?   @db.VarChar(100)
  location               String?   @db.VarChar(100)
  client_id              Int?
  latitude               Decimal?  @db.Decimal(9, 6)
  longitude              Decimal?  @db.Decimal(9, 6)
  geofence_radius_meters Int?      @default(500)
  rentals                rentals[]
  clients                clients?  @relation(fields: [client_id], references: [client_id], onDelete: NoAction, onUpdate: NoAction)
}
