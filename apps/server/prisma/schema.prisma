// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Equipment {
  equipment_id    Int       @id @default(autoincrement())
  equipment_code  String    @unique
  type            String
  site_id         Int?
  status          String    @default("idle")
  created_at      DateTime  @default(now())
  site            Site?     @relation(fields: [site_id], references: [site_id])
  rentals         Rental[]
  maintenances    Maintenance[]
  revenues        Revenue[]
  telemetry       Telemetry[]
}

model Site {
  site_id     Int        @id @default(autoincrement())
  site_code   String     @unique
  site_name   String
  location    String
  latitude    Float
  longitude   Float
  equipment   Equipment[]
  rentals     Rental[]
  weather     WeatherCache[]
}

model Operator {
  operator_id     Int      @id @default(autoincrement())
  operator_code   String   @unique
  name            String
  company_id      Int
  company         Company  @relation(fields: [company_id], references: [company_id])
  rentals         Rental[]
}

model Company {
  company_id         Int       @id @default(autoincrement())
  company_name       String
  reliability_score  Int       @default(100)
  past_delays_count  Int       @default(0)
  operators          Operator[]
  rentals            Rental[]
}

model Rental {
  rental_id              Int       @id @default(autoincrement())
  equipment_id           Int
  site_id                Int
  company_id             Int
  operator_id            Int
  check_out_date         DateTime
  check_in_date          DateTime?
  expected_return_date   DateTime
  engine_hours_per_day   Float?
  idle_hours_per_day     Float?
  operating_days         Int?
  status                 String    @default("active")
  created_at             DateTime  @default(now())
  equipment              Equipment @relation(fields: [equipment_id], references: [equipment_id])
  site                   Site      @relation(fields: [site_id], references: [site_id])
  company                Company   @relation(fields: [company_id], references: [company_id])
  operator               Operator  @relation(fields: [operator_id], references: [operator_id])
  revenue                Revenue?
}

model Maintenance {
  maintenance_id  Int       @id @default(autoincrement())
  equipment_id    Int
  service_date    DateTime
  service_type    String
  issue_reported  String?
  downtime_days   Int?
  created_at      DateTime  @default(now())
  equipment       Equipment @relation(fields: [equipment_id], references: [equipment_id])
}

model Revenue {
  revenue_id     Int       @id @default(autoincrement())
  equipment_id   Int
  rental_id      Int       @unique
  rental_rate    Float
  total_cost     Float
  created_at     DateTime  @default(now())
  equipment      Equipment @relation(fields: [equipment_id], references: [equipment_id])
  rental         Rental    @relation(fields: [rental_id], references: [rental_id])
}

model WeatherCache {
  id         Int       @id @default(autoincrement())
  site_id    Int
  date       DateTime
  temp_c     Float?
  precipitation_mm Float?
  wind_kph   Float?
  fetched_at DateTime  @default(now())
  site       Site      @relation(fields: [site_id], references: [site_id])

  @@unique([site_id, date])
}

model Telemetry {
  id           Int       @id @default(autoincrement())
  equipment_id Int
  ts           DateTime  @default(now())
  engine_rpm   Int?
  fuel_rate_lph Float?
  gps_lat      Float?
  gps_lng      Float?
  is_idle      Boolean?
  equipment    Equipment @relation(fields: [equipment_id], references: [equipment_id])
}

model ForecastState {
  id             Int       @id @default(autoincrement())
  site_id        Int
  equipment_type String
  model_state    String
  updated_at     DateTime  @default(now())

  @@unique([site_id, equipment_type])
}